version: '3.7'

volumes:
  data_local: {
    driver: local
  }

services:
  web:
    build:
      context: .
      dockerfile: provision/web/Dockerfile
    container_name: ${APP_NAME}__web
    restart: unless-stopped
    tty: true
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - .:/var/www
      - ./provision/web/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - private_network

  proxy:
    image: nginx:alpine
    container_name: ${APP_NAME}__proxy
    restart: unless-stopped
    depends_on:
      - web
    tty: true
    env_file:
      - .env
    volumes:
      - .:/var/www
      - ./provision/proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./provision/proxy/certs/${APP_DOMAIN}:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    networks:
      - private_network

  db:
    image: mysql:5.7
    container_name: ${APP_NAME}__database
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - data_local:/var/lib/mysql
      - ./provision/db/mysql.cnf:/etc/mysql/my.cnf
      - ./temp/dump:/temp
    ports:
      - "3306:3306"
    networks:
      - private_network

networks:
  private_network:
    driver: bridge
